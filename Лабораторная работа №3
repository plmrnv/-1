<StackPanel Background="#FFD8D8D8">
 <StackPanel Orientation="Horizontal" Background="#FFE4E0E0">
 <Button x:Name="btnAdd" Margin="10,10,5,10" Content="Добавить" Height="25"
 Click="btnAdd_Click"/>
 <Button x:Name="btnEdit" Margin="10,10,5,10" Content="Редактировать"
 Height="25" Click="btnEdit_Click"/>
 <Button x:Name="btnDelete" Margin="10,10,5,10" Content="Удалить" Height="25"
 Click="btnDelete_Click"/>
 </StackPanel>
 <Label Margin="5" HorizontalAlignment="Center">
 Список успеваемости студентов</Label>
 <ListView x:Name="lvProgress" Background="#FFD3CDCD">
 . . . .
 . . . .
 . . . .
 </ListView>
 </StackPanel>
<Window x:Class="WpfApplDemo2018.View.WindowNewProgress"
 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 mc:Ignorable="d"
 Height="170" Width="260">
 <Grid>
 <Grid.RowDefinitions>
 <RowDefinition Height="40*"/>
 <RowDefinition Height="40*"/>
 <RowDefinition Height="40*"/>
 </Grid.RowDefinitions>
 <Grid.ColumnDefinitions>
 <ColumnDefinition Width="40*"/>
 <ColumnDefinition Width="75*"/>
 </Grid.ColumnDefinitions>
 <TextBlock Grid.Row="0" Grid.Column="0" Text="Код:"
 HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5"/>
 <TextBox x:Name="TbId" Grid.Row="0" Grid.Column="1" Height="20" Width="50"
 HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5"
 Text="{Binding Id}" IsEnabled="False"/>
 <TextBox x:Name="TbProgress" Grid.Row="1" Grid.Column="1" Height="20" Width="130"
 HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5"
 Text="{Binding NameRole}"/>
 <StackPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2"
 Orientation="Horizontal" HorizontalAlignment="Right">
 <Button x:Name="BtSave" Content="Сохранить" Height="25"
 HorizontalAlignment="Right" VerticalAlignment="Top"
 Margin="5,10,10,5" IsDefault="True" Click="BtSave_Click"/>
 <Button x:Name="BtCansel" Content="Отменить" Height="25"
 HorizontalAlignment="Right" VerticalAlignment="Top"
 Margin="5,10,10,5" IsCancel="True"/>
 </StackPanel>
 </Grid>
</Window> 

/// <summary>
 /// Нахождение максимального Id
 /// </summary>
 /// <returns></returns>
 public int MaxId()
 {
 int max = 0;
 foreach (var r in this.ListProgress)
 {
 if (max < r.Id)
 {
 max = r.Id;
 };
 }
 return max;
 }
/// <summary>
/// Добавление новых данных по успеваемости
/// </summary>
/// <param name="sender"></param>
/// <param name="e"></param>
private void btnAdd_Click(object sender, RoutedEventArgs e)
{
 WindowNewProgress wnProgress = new WindowNewProgress
 {
 Title = "Новая оценка",
 Owner = this
 };
 // формирование кода новой должности
 int maxIdProgress = vmProgress.MaxId() + 1;
 Progress progress = new Progress
 {
 Id = maxIdProgress
 };
 wnProgress.DataContext = role;
 if (wnProgress.ShowDialog() == true)
 {
 vmProgress.ListP.Add(progress);
 }
}
private void btnEdit_Click(object sender, RoutedEventArgs e)
{
 WindowNewProgress wnProgress = new WindowNewProgress
 {
 Title = "Редактирование успеваемости",
 Owner = this
 };
 Progress progress = lvProgress.SelectedItem as Progress;
 if (progress != null)
 {
 Progress tempProgress = progress.ShallowCopy();
 wnProgress.DataContext = tempProgress;
 if (wnProgress.ShowDialog() == true)
 {
 // сохранение данных
 role.NameProgress = tempProgress.NameProgress;
 lvProgress.ItemsSource = null;
 lvProgress.ItemsSource = vmProgress.ListProgress;
 }
 }
 else
 {
 MessageBox.Show("Необходимо выбрать студента для редактированния",
 "Предупреждение",MessageBoxButton.OK, MessageBoxImage.Warning);
 }
}
private void btnDelete_Click(object sender, RoutedEventArgs e)
{
 Progress progress = (Progress)lvStudents.SelectedItem;
 if (progress != null)
 {
 MessageBoxResult result = MessageBox.Show("Удалить данные по должности: " +
 progress.NameProgress, "Предупреждение", MessageBoxButton.OKCancel,
 MessageBoxImage.Warning);
 if (result == MessageBoxResult.OK)
 {
 vmProgress.ListProgress.Remove(progress);
 }
 }
 else
 {
 MessageBox.Show("Необходимо выбрать студента для удаления",
 "Предупреждение", MessageBoxButton.OK, MessageBoxImage.Warning);
 }
}
